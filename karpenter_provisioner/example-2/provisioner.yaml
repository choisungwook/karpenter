
apiVersion: karpenter.sh/v1beta1
kind: NodePool
metadata:
  name: default
spec:
  template:
    spec:
      requirements:
      - key: "karpenter.k8s.aws/instance-category"
        operator: In
        values: ["t"]
      - key: "karpenter.k8s.aws/instance-cpu"
        operator: Gt
        values: ["1"]
      - key: "karpenter.k8s.aws/instance-generation"
        operator: Gt
        values: ["2"]
      - key: "topology.kubernetes.io/zone"
        operator: In
        values: ["ap-northeast-2a", "ap-northeast-2b", "ap-northeast-2c"]
      - key: "kubernetes.io/arch"
        operator: In
        values: ["amd64"]
      - key: "karpenter.sh/capacity-type"
        operator: In
        values: ["on-demand"]
      nodeClassRef:
        apiVersion: karpenter.k8s.aws/v1beta1
        kind: EC2NodeClass
        name: default
---
apiVersion: karpenter.k8s.aws/v1beta1
kind: EC2NodeClass
metadata:
  name: default
spec:
  amiFamily: AL2
  # Managed-nodegroup에 설정된 EC2 인스턴스 IAM role을 확인
  role: "eksctl-karpenter-practice-nodegrou-NodeInstanceRole-ljszW6K09n4N"

  subnetSelectorTerms:
  - tags:
      karpenter.sh/discovery: "karpenter-practice"

  securityGroupSelectorTerms:
  - tags:
      karpenter.sh/discovery: "karpenter-practice"
